h2. Ruby Rools

Rools is a pure Ruby rules-engine.  
Its goal is to abstracting business logic and program-flow. 
Rools is ideally suited to processing applications where the business logic undergoes frequent modification.


Current version is "<%=  Rools::ROOLS_VERSION %>":http://rubyforge.org/projects/rools/ 

It's about businesss logic in "workflow":http://en.wikipedia.org/wiki/Workflow and "bpm":http://en.wikipedia.org/wiki/Business_Process_Management. The idea is to have business logic directly at hand, not embedded within the software.

In Rools you can define rules using decision tables, in XML or as Ruby classes.

h2. Grasping it

To "quickly get started":quickstart.html.

h2. Getting it

You can "get":/download.html it as a gem or check out the source to build a fresh gem or use it directly.  
Note: If you decide to build you own gem, please make sure to read the "Developer documentation":dev0.html and required gems.

h2. Using it

There are a few "examples":/test/ on how to use Rools.

h2. Need Support

You can try the "Rools User Group":http://groups.google.com/group/rools-users first, but make sure you read this first:
*  "How To Ask Questions The Smart Way":http://www.catb.org/~esr/faqs/smart-questions.html
*  "How to Report Bugs Effectively":http://www.chiark.greenend.org.uk/~sgtatham/bugs.html
    
For commercial and dedicated support or sponsored enhancements (demand-driven development), please "email.":mailto:pat@vightel.com

     
h2. Test Coverage

AutoTest is now being used to continuously run the tests on any change. 
Current Specification/Test Coverage is now: <a href''><%= Rools::ROOLS_COVERAGE %>%</a> using "RSpec":http://rspec.rubyforge.org/ (check svn)

* Specification report is "here":./output/rspec_report.html
* Coverage report is "here":./output/coverage/index.html

It is Behavior Driven Development aka BDD from now on!